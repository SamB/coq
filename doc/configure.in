# autoconf input for Coq documentation
#
# the script generated by autoconf from this input will set the following
# variables:
#   COQTOP        "coqtop.byte"
#   COQLIB        result of $COQTOP -where
#   COQVERSION    result of $COQTOP -v
#   COQC          "coqc"

# check for one particular file of the sources 
AC_INIT(Reference-Manual.tex)

# Check for Coq binaries

# we first look for coqtop.byte in the path; if not present we fail
AC_CHECK_PROG(COQTOPBYTE,coqtop.byte,coqtop.byte,no)
if test "$COQTOPBYTE" = no ; then
	AC_MSG_ERROR(Cannot find coqtop.byte)
fi

# we extract Coq version number and library path
echo $COQTOPBYTE
COQVERSION=`$COQTOPBYTE -v | sed -n -e 's|.*version* *\([[^ ]]*\).*|\1|p' `
echo "Coq version is $COQVERSION"
COQLIB=`$COQTOPBYTE -where`
echo "Coq library path is $COQLIB"

# then we look for coqc
AC_CHECK_PROG(COQC,coqc,coqc,no)
if test "$COQC" = no ; then
	AC_MSG_ERROR(Cannot find coqc)
fi
COQCVERSION=`$COQC -v | sed -n -e 's|.*version* *\([[^ ]]*\).*|\1|p' `
AC_MSG_CHECKING(coqc version)
if test "$COQCVERSION" != $COQVERSION ; then
    AC_MSG_ERROR(coqc and coqtop.byte versions differ)
else
    AC_MSG_RESULT(ok)
fi

# we look for coq-tex
AC_CHECK_PROG(COQTEX,coq-tex,coq-tex,no)
if test "$COQTEX" = no ; then
    AC_MSG_ERROR(Cannot find coq-tex)
fi

# substitutions to perform
AC_SUBST(COQTOPBYTE)
AC_SUBST(COQC)
AC_SUBST(COQLIB)
AC_SUBST(COQVERSION)
AC_SUBST(COQTEX)

# Finally create the Makefile from Makefile.in
AC_OUTPUT(Makefile)
